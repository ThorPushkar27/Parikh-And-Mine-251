TC = O(N)
SC = O(1)

int maxSubarraySum(vector<int> &arr, int n) {
	int sum=0;
	for(int i=0; i<n; i++){
		sum+=arr[i];
	}
	int curr_max= arr[0];
	int max_so_far = arr[0];
	int curr_min= arr[0];
	int min_so_far = arr[0];
	for(int i=1; i<n; i++){
		//Kadane Algorithm to find maximum Subarray sum
		curr_max = max(curr_max+arr[i],arr[i]);
		max_so_far =max(max_so_far,curr_max);

		//Kadane Algorithm to find minimum Subarray sum
		curr_min = min(curr_min+arr[i],arr[i]);
		min_so_far = min(min_so_far,curr_min);

		
		
	}
	if(min_so_far == sum){
		return max_so_far;
	}

	return max(max_so_far, sum-min_so_far);
	// Write your code here.
}
